!function(e, t){'object'==typeof exports&&'object'==typeof module?module.exports=t(require('window')):'function'==typeof define&&define.amd?define(['window'], t):'object'==typeof exports?exports.NiceSelect=t(require('window')):e.NiceSelect=t(e.window);}(this, (function(e){
    return function(e){const t={};function n(i){if(t[i]){return t[i].exports;}const o=t[i]={i: i, l: !1, exports: {}};return e[i].call(o.exports, o, o.exports, n), o.l=!0, o.exports;}return n.m=e, n.c=t, n.d=function(e, t, i){n.o(e, t)||Object.defineProperty(e, t, {enumerable: !0, get: i});}, n.r=function(e){'undefined'!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e, Symbol.toStringTag, {value: 'Module'}), Object.defineProperty(e, '__esModule', {value: !0});}, n.t=function(e, t){if(1&t&&(e=n(e)), 8&t){return e;}if(4&t&&'object'==typeof e&&e&&e.__esModule){return e;}const i=Object.create(null);if(n.r(i), Object.defineProperty(i, 'default', {enumerable: !0, value: e}), 2&t&&'string'!=typeof e){for(const o in e){n.d(i, o, function(t){return e[t];}.bind(null, o));}}return i;}, n.n=function(e){const t=e&&e.__esModule?function(){return e.default;}:function(){return e;};return n.d(t, 'a', t), t;}, n.o=function(e, t){return Object.prototype.hasOwnProperty.call(e, t);}, n.p='/', n(n.s=0);}([
        function(e, t, n){
            'use strict';n.r(t), function(e){
                n.d(t, 'bind', (function(){return u;}));n(2);function i(e, t){t||(t=document.createEvent('MouseEvents')).initEvent('click', !0, !1), e.dispatchEvent(t);}function o(e){const t=document.createEvent('HTMLEvents');t.initEvent('change', !0, !1), e.dispatchEvent(t);}function s(e, t){return e.getAttribute(t);}function r(e, t){return Boolean(e)&&e.classList.contains(t);}function d(e, t){if(e){return e.classList.add(t);}}function l(e, t){if(e){return e.classList.remove(t);}}function c(e, t){const n=e.getBoundingClientRect(), i=n.bottom, o=(n.height, n.top), s=t.getBoundingClientRect();return o>=s.top&&i<=s.bottom;}const a={data: null, searchable: !1};function p(e, t){this.el=e, this.config={...a, ...t||{}}, this.data=this.config.data, this.selectedOptions=[], this.placeholder=s(this.el, 'placeholder')||this.config.placeholder||'Select an option', this.dropdown=null, this.multiple=s(this.el, 'multiple'), this.disabled=s(this.el, 'disabled'), this.create();}function u(e, t){return new p(e, t);}p.prototype.create=function(){this.el.style.display='none', this.data?this.processData(this.data):this.extractData(), this.renderDropdown(), this.bindEvent();}, p.prototype.processData=function(e){const t=[];e.forEach((function(e){t.push({data: e, attributes: {selected: !1, disabled: !1, display: !0}});})), this.options=t;}, p.prototype.extractData=function(){const e=this, t=this.el.querySelectorAll('option'), n=[], i=[], o=[];t.forEach((function(t){const o={text: t.innerText, value: t.value}, s={selected: null!=t.getAttribute('selected')||t.value==e.el.value, disabled: null!=t.getAttribute('disabled'), display: !0};n.push(o), i.push({data: o, attributes: s});})), this.data=n, this.options=i, this.options.forEach((function(e){e.attributes.selected&&o.push(e);})), this.selectedOptions=o;}, p.prototype.renderDropdown=function(){
                    const e=[
                            'nice-select',
                            s(this.el, 'class')||'',
this.disabled?'disabled':'',
this.multiple?'has-multiple':'',
                        ], t='<div class="'.concat(e.join(' '), '" tabindex="').concat(this.disabled?null:0, '">\n  <span class="').concat(this.multiple?'multiple-options':'current', '"></span>\n  <div class="nice-select-dropdown">\n  ').concat(this.config.searchable?'<div class="nice-select-search-box">\n<input type="text" class="nice-select-search" placeholder="Search..."/>\n</div>':'', '\n  <ul class="list"></ul>\n  </div></div>\n');this.el.insertAdjacentHTML('afterend', t), this.dropdown=this.el.nextElementSibling, this._renderSelectedItems(), this._renderItems();
                }, p.prototype._renderSelectedItems=function(){if(this.multiple){let e='';this.selectedOptions.forEach((function(t){e+='<span class="current">'.concat(t.data.text, '</span>');})), e=''==e?this.placeholder:e, this.dropdown.querySelector('.multiple-options').innerHTML=e;}else{const t=this.selectedOptions.length>0?this.selectedOptions[0].data.text:this.placeholder;this.dropdown.querySelector('.current').innerHTML=t;}}, p.prototype._renderItems=function(){const e=this, t=this.dropdown.querySelector('ul');t.scrollTop=0, t.innerHTML='', this.options.forEach((function(n){n.display&&t.appendChild(e._renderItem(n));}));}, p.prototype._renderItem=function(e){
                    let t, n=this, i=document.createElement('li');i.setAttribute('data-value', e.data.value);const o=[
                        'option',
e.attributes.selected?'selected':null,
e.attributes.disabled?'disabled':null,
                    ];return(t=i.classList).add.apply(t, o), i.innerHTML=e.data.text, i.addEventListener('click', (function(t){return n._onItemSelected(e, t);})), i.addEventListener('select', (function(t){return n._onItemSelected(e, t);})), e.element=i, i;
                }, p.prototype.update=function(){if(this.extractData(), this.dropdown){const e=r(this.dropdown, 'open');this.dropdown.parentNode.removeChild(this.dropdown), this.create(), e&&i(this.dropdown);}}, p.prototype.focus=function(){if(this.dropdown.classList.toggle('open'), this.dropdown.querySelector('ul').scrollTop=0, this.dropdown.classList.contains('open')){const e=this.dropdown.querySelector('.nice-select-search');e&&(e.value='', e.focus());let t=this.dropdown.querySelector('.focus');l(t, 'focus'), d(t=this.dropdown.querySelector('.selected'), 'focus');for(let n=0;n<this.options.length;n ++){this.options[n].display=!0;}this._renderItems();}else {this.dropdown.focus();}}, p.prototype.disable=function(){this.disabled||(this.disabled=!0, d(this.dropdown, 'disabled'));}, p.prototype.enable=function(){this.disabled&&(this.disabled=!1, l(this.dropdown, 'disabled'));}, p.prototype.clear=function(){this.selectedOptions=[], this._renderSelectedItems(), this.updateSelectValue(), o(this.el);}, p.prototype.destroy=function(){this.dropdown&&(this.dropdown.parentNode.removeChild(this.dropdown), this.el.style.display='');}, p.prototype.bindEvent=function(){this.dropdown.addEventListener('click', this._onClicked.bind(this)), this.dropdown.addEventListener('keydown', this._onKeyPressed.bind(this)), e.addEventListener('click', this._onClickedOutside.bind(this)), this.config.searchable&&this._bindSearchEvent();}, p.prototype._bindSearchEvent=function(){const e=this.dropdown.querySelector('.nice-select-search');e&&e.addEventListener('click', (function(e){return e.stopPropagation(), !1;})), e.addEventListener('input', this._onSearchChanged.bind(this));}, p.prototype._onClicked=function(e){this.focus();}, p.prototype._onItemSelected=function(e, t){const n=(t=t.detail||t).target;r(n, 'disabled')||(this.dropdown.classList.remove('open'), this.multiple?r(n, 'selected')||(d(n, 'selected'), this.selectedOptions.push(e)):(this.selectedOptions.forEach((function(e){l(e.element, 'selected');})), d(n, 'selected'), this.selectedOptions=[e]), this.dispatchOnChanged(t), this._renderSelectedItems(), this.updateSelectValue());}, p.prototype.dispatchOnChanged=function(e){if(this.config.onChanged){const t=this.selectedOptions.map((function(e){return e.data.value;}));this.config.onChanged(t, e);}}, p.prototype.updateSelectValue=function(){this.multiple?this.selectedOptions.each((function(e){const t=this.el.querySelector(`option[value="${e.data.value}"]`);t&&t.setAttribute('selected', !0);})):this.selectedOptions.length>0&&(this.el.value=this.selectedOptions[0].data.value), o(this.el);}, p.prototype._onClickedOutside=function(e){this.dropdown.contains(e.target)||this.dropdown.classList.remove('open');}, p.prototype._onKeyPressed=function(e){e.preventDefault();const t=this.dropdown.querySelector('.focus'), n=this.dropdown.classList.contains('open');if(13==e.keyCode){n?i(t, new CustomEvent('select', {detail: e})):i(this.dropdown);}else if(40==e.keyCode){if(n){const o=this._findNext(t);if(o){l(this.dropdown.querySelector('.focus'), 'focus'), d(o, 'focus'), c(o, o.parentElement)||(o.parentElement.scrollTop+=o.offsetHeight);}}else {i(this.dropdown);}e.preventDefault();}else if(38==e.keyCode){if(n){const s=this._findPrev(t);if(s){l(this.dropdown.querySelector('.focus'), 'focus'), d(s, 'focus'), c(s, s.parentElement)||(s.parentElement.scrollTop-=s.offsetHeight);}}else {i(this.dropdown);}e.preventDefault();}else {27==e.keyCode&&n&&i(this.dropdown);}return!1;}, p.prototype._findNext=function(e){for(e=e?e.nextElementSibling:this.dropdown.querySelector('.list .option');e;){if(!r(e, 'disabled')&&'none'!=e.style.display){return e;}e=e.nextElementSibling;}return null;}, p.prototype._findPrev=function(e){for(e=e?e.previousElementSibling:this.dropdown.querySelector('.list .option:last-child');e;){if(!r(e, 'disabled')&&'none'!=e.style.display){return e;}e=e.previousElementSibling;}return null;}, p.prototype._onSearchChanged=function(e){e.preventDefault();let t=this.dropdown.classList.contains('open'), n=e.target.value;if(''==(n=n.toLowerCase())){this.options.forEach((function(e){e.display=!0;})), this._renderItems();}else if(t){const i=new RegExp(n);this.options.forEach((function(e){const t=e.data.text.toLowerCase(), n=i.test(t);e.display=n;})), this._renderItems();}this.dropdown.querySelectorAll('.focus').forEach((function(e){l(e, 'focus');})), d(this._findNext(null), 'focus');};
            }.call(this, n(1));
        },
        function(t, n){t.exports=e;},
        function(e, t, n){},
    ]);
}));
